import{r as e}from"./iframe-hb8Gt22z.js";import{r as f,u as b}from"./index-D1YhH-ng.js";const g=f({slots:{heading:"flex flex-col",label:"font-bold",footing:"",hint:"text-gray-500",error:'before:content-["âœ˜"] before:mr-1 text-rose-800',requiredAsterisk:"ml-0.5 no-underline cursor-help"},variants:{sizer:{xs:{heading:"mb-1.5",label:"text-xs",footing:"mt-1.5",hint:"text-xs",error:"text-xs"},sm:{heading:"mb-1.75",label:"text-sm",footing:"mt-1.75",hint:"text-xs",error:"text-sm"},base:{heading:"mb-2",label:"text-base",footing:"mt-2",hint:"text-sm",error:"text-sm"},lg:{heading:"mb-2.25",label:"text-lg",footing:"mt-2.25",hint:"text-base",error:"text-base"},xl:{heading:"mb-2.5",label:"text-xl",footing:"mt-2.5",hint:"text-lg",error:"text-lg"}}},defaultVariants:{sizer:"base"}});function y({children:l,controlId:d,label:a,labelId:m,hint:s,hintId:c,error:i,errorId:p,sizer:r,required:h=!1,...u}){const n=b(r),t=g({sizer:n}),o=i&&i!==!0;return e.createElement("div",{"data-nickui-component":"Field","data-nickui-sizer":Array.isArray(r)?r.join(","):r,"data-nickui-resolved-sizer":n,...u},a&&e.createElement("label",{id:m,className:t.heading(),htmlFor:d},e.createElement("div",{className:t.label()},a,h&&e.createElement("abbr",{className:t.requiredAsterisk(),title:"(required)"},"*"))),e.createElement("div",null,l),(s||o)&&e.createElement("div",{className:t.footing()},s&&e.createElement("div",{id:c,className:t.hint()},s),o&&e.createElement("div",{id:p,className:t.error(),"aria-live":"assertive"},i)))}y.__docgenInfo={description:`Field wraps one form control in a standard field layout (label, hint, error
message, etc).
@props {@link FieldProps}`,methods:[],displayName:"Field",props:{sizer:{required:!1,tsType:{name:"union",raw:"SizerType | SizerType[]",elements:[{name:"unknown[number]",raw:"(typeof SIZERS)[number]"},{name:"Array",elements:[{name:"unknown[number]",raw:"(typeof SIZERS)[number]"}],raw:"SizerType[]"}]},description:`Changes the size of the component. A sizer string, or an array of sizer
strings for responsive sizing.`},label:{required:!1,tsType:{name:"DescriptorType"},description:"The main label to show above the form control(s), naming the field"},hint:{required:!1,tsType:{name:"DescriptorType"},description:`A hint about what kind of value the field accepts, such as a phone
number format`},error:{required:!1,tsType:{name:"DescriptorType"},description:"Error message to show beneath the form control(s), or just `true` to\ntrigger the error style without showing an error message."},required:{required:!1,tsType:{name:"boolean"},description:"When `true`, adds an asterisk to the label",defaultValue:{value:"false",computed:!1}},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"The content of the form-control section of the Field"},labelId:{required:!1,tsType:{name:"string"},description:"For accessibility purposes: an id to set on the label element"},controlId:{required:!1,tsType:{name:"string"},description:"The id of the control, for accessibility purposes. If there are multiple\ncontrols in the Field, you can omit `controlId` and instead set\n`aria-label` or `aria-labelledby` on the individual controls."},hintId:{required:!1,tsType:{name:"string"},description:"For accessibility purposes: an id to set on the hint element"},errorId:{required:!1,tsType:{name:"string"},description:"For accessibility purposes: an id to set on the error message element"}}};export{y as F};
